#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>
#include <windows.h>
#include <stdlib.h>
#include <math.h>
#include <stdlib.h>

猜数字游戏
int main()
{
	int i = 0;
	int j = 0;
	char input = Y,
	while (strcmp(input, 'Y') == 0)
	{
		i = rand();
		while (i != j)
		{
			scanf("%d", &j);
			if (i == j)
				printf("猜对了");
			else
				printf("猜错了");
		}
		printf("再来一局游戏吗？>:");
		scanf("%c", &input);
	}
	printf("游戏结束")；
	return 0;
}

//在屏幕上输出9*9乘法口诀表
int main()
{
	int i = 0;
	int j = 0;
	int n = 0;
	for (i = 1; i <= 9; i++)
	{
		for (j = 1; j <= i; j++)
		{
			n = i * j;
			printf("%d * %d = %-2d ", i, j, n);
		}
		printf("\n");
	}
	return 0;
}

//求10个整数的最大值
int main()
{
	int max = 0;
	int i = 0;
	int arr[10] = { -1,-2,-3,-4,-5,-6,-7,-8,-9,-10 };
	for (max = arr[0],i = 1; i < 10; i++)
	{
		if (max < arr[i])
		{
			max = arr[i];
		}
	}
	printf("max = %d", max);
}

计算1/1-1/2+1/3-1/4……+1/99-1/100的值，打印出结果
int main()
{
	int i = 0;
	double sum = 0;
	for (i = 1; i <= 100; i++)
	{
		if (i % 2 == 0)
		{
			sum -= 1.0 / i;
		}
		else
		{
			sum += 1.0 / i;
		}
	}
	printf("%lf", sum);
}

int main()
{
	int i = 0;
	double sum = 0;
	int flag = 1;
	for (i = 1; i <= 100; i++)
	{
		sum += flag * 1.0 / i;
		flag = -flag;
	}
	printf("%lf", sum);
}

//编写程序数一下1到100所有整数中出现了多少个数字9
int main()
{
	int i = 0;
	int j = 0;
	for (i = 1; i <= 100; i++)
	{
		if (i / 10 == 9)
			j++;
		if (i % 10 == 9)
			j++;
	}
	printf("出现了%d个数字9", j);
	return 0;
}

//打印100~200之间的素数（试除法）
int main()
{
	int i = 0;
	int n = 0;
	int count = 0;
	int count2 = 0;
	for (i = 101; i <= 200; i+=2)
	{
		for (n = 2, count = 0; n <= sqrt(i); n++)
		{
			if (i % n == 0)
			{
				count++;
				break;
			}
		}
		if (count == 0)
		{
			printf("%d ", i);
			count2++;
		}
	}
	printf("\n%d ", count2);
}



//打印1000~2000的闰年
int main()
{
	int year = 0;
	int count = 0;
	for (year = 1000; year <= 2000; year++)
	{
		if (year % 4 == 0 && year % 100 != 0)
		{
			printf("%d ", year);
			count++;
		}

		else if(year % 400 == 0)
		{
			printf("%d ", year);
			count++;
		}
	}
	printf("\ncount = %d\n", count);
	return 0;
}

//求两个数的最大公约数（辗转相除法）
int main()
{
	int m = 0;
	int n = 0;
	int i = 1;
	scanf("%d%d", &m, &n);
	while (i != 0)
	{
		i = m % n;
		if (i == 0)
			break;
		m = n;
		n = i;
	}
	printf("最大公约数是%d", n);
	return 0;
}

//打印1~100中的	3的倍数的数字
int main()
{
	int i = 0;
	for (i = 1; i <= 100; i++)
	{
		if (i % 3 == 0)
			printf("%d ", i);
	}
	return 0;
}

//从大到小输出三个值
int main()
{
	int a = 0;
	int b = 0;
	int c = 0;
	scanf("%d%d%d", &a, &b, &c);
	if (a < b)
	{
		int tmp = b;
		b = a;
		a = tmp;
	}
	if (a < c)
	{
		int tmp = c;
		c = a;
		a = tmp;
	}
	if (b < c)
	{
		int tmp = c;
		c = b;
		b = tmp;
	}
	printf("%d %d %d", a, b, c);
}

int main()
{
	int a = 0;
	int b = 0;
	int c = 0;
	scanf("%d%d%d", &a, &b, &c);
	if (a >= b && a >= c)
	{
		printf("%d\n", a);
		if (b >= c)
		{
			printf("%d\n", b);
			printf("%d\n", c);

		}
		else
		{
			printf("%d\n", c);
			printf("%d\n", b);

		}

	}
	else if (b >= c)
	{
		printf("%d\n", b);
		if (a >= c)
		{
			printf("%d\n", a);
			printf("%d\n", c);
		}
		else
		{
			printf("%d\n", c);
			printf("%d\n", a);

		}
	}
	else
	{
		printf("%d\n", c);
		if (a >= b)
		{
			printf("%d\n", a);
			printf("%d\n", b);
		}
		else
		{
			printf("%d\n", b);
			printf("%d\n", a);

		}
		return 0;
	}

	return 0;
}

int func(int a)
{
	int b;
	switch (a)
	{
	default:b = 0;

	case 1:b = 30;
	case 2:b = 20;
	case 3:b = 16;
	}
	return b;
}
int main()
{
	int a = func(4);
	printf("%d", a);
	return 0;
}
